#!/usr/bin/env python3
from pathlib import Path
import ipaddress

# === –ù–ê–°–¢–†–û–ô–ö–ò ===============================================================

# –ü–∞–ø–∫–∏ —Å –¥–æ–º–µ–Ω–Ω—ã–º–∏ —Å–ø–∏—Å–∫–∞–º–∏ (.lst), –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–∞–≤–∏—Ç—å "DOMAIN-SUFFIX,"
DOMAIN_DIRS = [
    "domains/services",
    # "domains/categories",
]

# –ü–∞–ø–∫–∏ —Å–æ —Å–ø–∏—Å–∫–∞–º–∏ IP/–ø–æ–¥—Å–µ—Ç–µ–π (.lst), –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ "IP-CIDR,<cidr>,no-resolve"
IP_DIRS = [
    "domains/ip",
    # "Subnets/IPv4",
    # "Subnets/IPv6",
]

MAKE_BACKUP = True  # —Å–æ–∑–¥–∞–≤–∞—Ç—å *.bak –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å—é

# ============================================================================
# –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
# ============================================================================

def process_domain_lst_file(path: Path) -> int:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–º–µ–Ω–Ω—ã–µ .lst:
      - –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
      - –Ω–µ –¥—É–±–ª–∏—Ä—É–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å, –µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å
      - –¥–æ–±–∞–≤–ª—è–µ—Ç "DOMAIN-SUFFIX," –∫ –æ—Å—Ç–∞–ª—å–Ω—ã–º —Å—Ç—Ä–æ–∫–∞–º
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫, –∫ –∫–æ—Ç–æ—Ä—ã–º –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –ø—Ä–µ—Ñ–∏–∫—Å.
    """
    src_lines = path.read_text(encoding="utf-8", errors="ignore").splitlines()
    out_lines = []
    changed = 0

    for raw in src_lines:
        line = raw.strip()
        if not line or line.startswith("#"):
            out_lines.append(raw)
            continue
        if line.startswith("DOMAIN-SUFFIX,"):
            # –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—Ä–æ–±–µ–ª—ã: –ø–∏—à–µ–º –∫–∞–∫ –µ—Å—Ç—å –∏–∑ line (–±–µ–∑ —Ö–≤–æ—Å—Ç–æ–≤—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤)
            out_lines.append(line)
            continue
        out_lines.append(f"DOMAIN-SUFFIX,{line}")
        changed += 1

    if MAKE_BACKUP:
        path.with_suffix(path.suffix + ".bak").write_text("\n".join(src_lines), encoding="utf-8")
    path.write_text("\n".join(out_lines) + "\n", encoding="utf-8")
    return changed


def normalize_ip_or_cidr(line: str):
    """
    –ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å IP/–ø–æ–¥—Å–µ—Ç—å—é –≤ –∫–∞–Ω–æ–Ω –¥–ª—è IP-CIDR:
      - bare IPv4  -> x.x.x.x/32
      - bare IPv6  -> xxxx::/128
      - IPv4/IPv6 —Å –º–∞—Å–∫–æ–π ‚Äî –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç —á–µ—Ä–µ–∑ ipaddress
      - —É–∂–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 'IP-CIDR,...' ‚Äî –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç ',no-resolve'
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
      - –≥–æ—Ç–æ–≤—É—é —Å—Ç—Ä–æ–∫—É "IP-CIDR,<cidr>,no-resolve"
      - –∏—Å—Ö–æ–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É (–µ—Å–ª–∏ —ç—Ç–æ –ø—É—Å—Ç–∞—è/–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π) ‚Äî —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –µ—ë
      - None (–µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω–∞ –∏ –µ—ë –Ω—É–∂–Ω–æ –æ—Ç–±—Ä–æ—Å–∏—Ç—å)
    """
    s = line.strip()

    # —É–∂–µ IP-CIDR
    if s.upper().startswith("IP-CIDR,"):
        body = s.split(",", 1)[1].strip()  # –≤—Å—ë –ø–æ—Å–ª–µ "IP-CIDR,"
        parts = [p.strip() for p in body.split(",")]
        cidr_raw = parts[0] if parts else ""
        try:
            if "/" in cidr_raw:
                net = ipaddress.ip_network(cidr_raw, strict=False)
                cidr = str(net)
            else:
                ip = ipaddress.ip_address(cidr_raw)
                cidr = f"{ip}/32" if isinstance(ip, ipaddress.IPv4Address) else f"{ip}/128"
            return f"IP-CIDR,{cidr},no-resolve"
        except ValueError:
            return None

    # –ø—É—Å—Ç—ã–µ/–∫–æ–º–º–µ–Ω—Ç—ã ‚Äî –≤–µ—Ä–Ω—É—Ç—å –∫–∞–∫ –µ—Å—Ç—å
    if not s or s.startswith("#"):
        return line

    # –ø–æ–¥—Å–µ—Ç—å CIDR?
    try:
        if "/" in s:
            net = ipaddress.ip_network(s, strict=False)
            return f"IP-CIDR,{net},no-resolve"
    except ValueError:
        pass

    # –≥–æ–ª—ã–π IP?
    try:
        ip = ipaddress.ip_address(s)
        cidr = f"{ip}/32" if isinstance(ip, ipaddress.IPv4Address) else f"{ip}/128"
        return f"IP-CIDR,{cidr},no-resolve"
    except ValueError:
        return None


def process_ip_lst_file(path: Path) -> tuple[int, int]:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç IP .lst:
      - –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç —Å—Ç—Ä–æ–∫–∏ –∫ 'IP-CIDR,<cidr>,no-resolve'
      - —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—É—Å—Ç—ã–µ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
      - –æ—Ç–±—Ä–∞—Å—ã–≤–∞–µ—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–æ, –æ—Å—Ç–∞–≤–ª–µ–Ω–æ_–±–µ–∑_–∏–∑–º–µ–Ω–µ–Ω–∏–π).
    """
    src_lines = path.read_text(encoding="utf-8", errors="ignore").splitlines()
    out_lines = []
    changed = 0
    kept = 0

    for raw in src_lines:
        res = normalize_ip_or_cidr(raw)
        if res is None:
            # –æ—Ç–±—Ä–æ—Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö
            continue
        if res == raw:
            out_lines.append(raw)
            kept += 1
        else:
            out_lines.append(res)
            changed += 1

    if MAKE_BACKUP:
        path.with_suffix(path.suffix + ".bak").write_text("\n".join(src_lines), encoding="utf-8")
    path.write_text("\n".join(out_lines) + "\n", encoding="utf-8")
    return changed, kept


# ============================================================================
# –û–°–ù–û–í–ù–û–ô –ó–ê–ü–£–°–ö
# ============================================================================

def main():
    total_dom_files = total_dom_changed = 0
    for d in DOMAIN_DIRS:
        base = Path(d)
        if not base.is_dir():
            print(f"‚ö†Ô∏è –ü–∞–ø–∫–∞ —Å –¥–æ–º–µ–Ω–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {d}")
            continue
        for file in base.rglob("*.lst"):
            changed = process_domain_lst_file(file)
            print(f"üåê {file} ‚Äî –¥–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤: {changed}")
            total_dom_files += 1
            total_dom_changed += changed

    total_ip_files = total_ip_changed = total_ip_kept = 0
    for d in IP_DIRS:
        base = Path(d)
        if not base.is_dir():
            print(f"‚ö†Ô∏è –ü–∞–ø–∫–∞ —Å IP –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {d}")
            continue
        for file in base.rglob("*.lst"):
            changed, kept = process_ip_lst_file(file)
            print(f"üß© {file} ‚Äî –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–æ: {changed}, –æ—Å—Ç–∞–≤–ª–µ–Ω–æ: {kept}")
            total_ip_files += 1
            total_ip_changed += changed
            total_ip_kept += kept

    print("\n=== –ò–¢–û–ì–û ===")
    print(f"–î–æ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã: {total_dom_files}, –¥–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤: {total_dom_changed}")
    print(f"IP-—Ñ–∞–π–ª—ã: {total_ip_files}, –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–æ —Å—Ç—Ä–æ–∫: {total_ip_changed}, –æ—Å—Ç–∞–≤–ª–µ–Ω–æ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {total_ip_kept}")

if __name__ == "__main__":
    main()
